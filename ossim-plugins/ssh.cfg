;; ssh
;; plugin_id: 4003
;; type: detector 
;; description: Ssh (Secure Shell) is a program for logging into a remote machine
;;              and for executing commands on a remote machine.
;; URL: http://www.openssh.com
;;
;; $Id: ssh.cfg,v 1.12 2010/03/23 16:42:18 juanmals Exp $

[DEFAULT]
plugin_id=4003

# default values for dst_ip and dst_port
# they can be overwritten in each rule
dst_ip=\_CFG(plugin-defaults,sensor)
dst_port=22

[config]
type=detector
enable=yes

source=log
location=/var/log/rsyslog/ssh/ssh.log

# create log file if it does not exists, 
# otherwise stop processing this plugin
create_file=false

process=sshd
start=no   
stop=no
startup=/etc/init.d/ssh start
shutdown=/etc/init.d/ssh stop

exclude_sids=98

[translation]
Version=22
Throughput=23
password=1
none=1
publickey=2
opened=25
closed=26

## rules

##
## Failed login attempts
##

[01 - Failed password]
#Feb  8 10:09:06 golgotha sshd[24472]: Failed password for dgil from 192.168.6.69 port 33992 ssh2
#Mar 29 11:17:52 opensourcesim sshd[11685]: Failed none for invalid user test tester from 19.80.11.24 port 42371 ssh2
#Mar 17 17:28:03 opensourcesim sshd[16689]: Failed password for invalid user user from 1.121.101.94 port 39792 ssh2
#Jan 13 05:48:12 spcp1appfac01 sshd[25796]: Failed password for invalid user jboss from 3.73.29.32 port 52736 ssh2
#Sep 15 11:29:17 devel-host sshd[18163]: Failed publickey for invalid user fred from 192.168.2.2 port 62788 ssh2 
#Oct 18 12:56:39 www1 sshd[9140]: Failed password for pcatalina from 87.216.160.114 port 53271 ssh2
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+).*ssh.*Failed (?P<type>publickey|password|none) for\s+(?P<info>invalid user)?\s*(?P<user>\S+)\s.*from\s+(?P<src>\S+)\s.*port\s+(?P<sport>\d{1,5})"
plugin_sid={translate($type)}
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
src_port={$sport}
username={$user}
userdata1={$info}
userdata2={$dst}

[02 - Invalid user]
#Sep  6 11:04:02 ossim-devel sshd[6983]: Invalid user test123 from 10.222.14.27
#Oct  2 23:58:41 ks213611 sshd[15638]: Invalid user minecraft from 20.18.31.8
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Invalid user (?P<user>\S+) from\s+(?P<src>\S+)"
plugin_sid=3
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
username={$user}

[03 - Illegal user]
# Jan  7 16:36:07 hostname sshd[25119]: Illegal user rolo from 192.168.2.1 
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Illegal user (?P<user>\S+) from\s+(?P<src>\S+)"
plugin_sid=4
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
username={$user}

[04 - Root login refused]
# Jan  15 01:32:01 ossim-devel sshd[1222]: ROOT LOGIN REFUSED FROM 10.222.3.41
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Root login refused from\s+(?P<src>\S+)"
plugin_sid=5
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
username=root

[05 - User not allowed because account is locked]
# Sep  6 11:04:02 ossim-devel sshd[6983]: User piedrahita not allowed because account is locked
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*User (?P<user>\S+) not allowed because account is locked"
plugin_sid=13
date={normalize_date($date)}
username={$user}
dst_ip={resolv($dst)}

[06 - User not allowed because listed]
#Sep  6 11:04:02 ossim-devel sshd[6983]: User piedrahita not allowed because listed in DenyUsers
#Oct 17 16:19:47 mitronete sshd[22541]: User test from avtraining.mad.alienvault.net not allowed because a group is listed in DenyGroups
#Oct 17 16:21:51 mitronete sshd[22585]: User test from avtraining.mad.alienvault.net not allowed because not listed in AllowUsers
#Oct 17 16:25:41 mitronete sshd[22620]: User test from avtraining.mad.alienvault.net not allowed because none of user's groups are listed in AllowGroups
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*User (?P<user>\S+)\s(from\s+(?P<src>\S+)\s+)?not allowed because (?P<info>.*)"
plugin_sid=6
date={normalize_date($date)}
username={$user}
dst_ip={resolv($dst)}
src_ip={resolv($src)}
userdata1={$info}

[07 - Authentication refused]
#Nov 15 14:21:49 128.1.4.9 sshd[1343672]: Authentication refused: bad ownership or modes for file /home/user/.sshauthorized_keys
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Authentication refused:\s*(?P<info>.*)"
plugin_sid=12
date={normalize_date($date)}
dst_ip={resolv($dst)}
userdata1={$info}

##
## Succesfull login attempts
##

[08 - Login sucessful (Accepted password)]
# Sep  6 10:51:04 ossim-devel sshd[6379]: Accepted password for dgil from 10.222.14.12 port 33232 ssh2
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Accepted password for (?P<user>\S+)\s.*from\s+(?P<src>\S+)\s.*port\s+(?P<sport>\d{1,5})"
plugin_sid=7
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
src_port={$sport}
username={$user}

[09 - Login sucessful (Accepted publickey)]
# Sep  5 19:07:51 lolita sshd[14206]: Accepted publickey for alopezp from 195.235.*.* port 45602 ssh2
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Accepted publickey for (?P<user>\S+)\s.*from\s+(?P<src>\S+)\s.*port\s+(?P<sport>\d{1,5})"
plugin_sid=8
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
src_port={$sport}
username={$user}

##
## Other
##
[10 - Bad protocol version identification]
# Sep  5 05:01:07 lolita sshd[18931]: Bad protocol version identification '\\026\\003' from 208.32.22.22
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Bad protocol version identification (?P<version>.*)from (?P<src>\S+)"
plugin_sid=9
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
userdata1={$version}

[11 - Did not receive identification string]
#Sep  5 05:01:07 lolita sshd[3083]: Did not receive identification string from 192.157.2.2
#Jan 12 02:52:11 ssdfasdaasdfc01 sshd[31147]: Did not receive identification string from 1.2.29.19
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Did not receive identification string from (?P<src>\S+)"
plugin_sid=10
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}

[12 - Refused connect]
#Jan 15 11:58:03 opensourcesim sshd[21212]: refused connect from 192.168.10.1
#Feb  5 05:00:08 morion sshd[20926]: refused connect from **.172.200.198 (**.172.200.198)
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+).*ssh.*refused connect from\s(?P<src>\S+)"
plugin_sid=19
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}

[13 - Received disconnect]
#Nov 15 11:55:35 130.1.4.9 sshd[1769702]: Received disconnect from 172.21.11.134: 11: Disconnect requested by Windows SSH Client.
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Received disconnect from (?P<src>\S+):\s(?P<info>.*)"
plugin_sid=11
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
userdata1={$info}

[14 - PAM X more authentication failures]
#Oct  2 18:55:30 wow sshd[11760]: PAM 1 more authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=213.37.174.35.dyn.user.ono.com  user=test
#Aug 14 19:30:47 ossim sshd[16178]: PAM 2 more authentication failures; logname= uid=0 euid=0 tty=ssh ruser= rhost=192.168.169.129  user=test
#Oct  4 10:45:45 ks213611 sshd[26330]: PAM 5 more authentication failures; logname= uid=0 euid=0 tty=ssh ruser= rhost=125.134.208.74  user=root
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*PAM (?P<times>\d+) more authentication failures?; logname=(?P<log>\S*) uid=(?P<uid>\S*) euid=(?P<euid>\S*) tty=(?P<tty>\S*) ruser=(?P<ruser>\S*) rhost=(?P<src>\S+)\s+user=(?P<user>\S+)"
plugin_sid=14
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip={resolv($src)}
username={$user}
filename={$log}
userdata1={$times}
userdata2={$uid}
userdata3={$euid}
userdata4={$tty}
userdata5={$ruser}

# At pam_unix.cfg
#[15 - authentication failures]
##Oct  5 19:36:21 ks213611 sshd[27170]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=190.91.126.187  user=root
##Oct  3 00:00:32 ks213611 sshd[19360]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=ninjabox-ext.cs.bell-labs.com  user=root
##Oct 11 18:45:31 www1 sshd[22850]: pam_unix(sshd:auth): authentication failure; logname= uid=0 euid=0 tty=ssh ruser= rhost=87.216.160.114  user=pcatalina
#event_type=event
#regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.* authentication failure; logname=(?P<log>\S*) uid=(?P<uid>\S*) euid=(?P<euid>\S*) tty=(?P<tty>\S*) ruser=(?P<ruser>\S*) rhost=(?P<src>\S+)\s+user=(?P<user>\S+)"
#plugin_sid=24
#date={normalize_date($date)}
#dst_ip={resolv($dst)}
#src_ip={resolv($src)}
#username={$user}
#filename={$log}
#userdata1={$uid}
#userdata2={$euid}
#userdata3={$tty}
#userdata4={$ruser}

[16 - Reverse mapping failed]
#Jan 14 23:17:47 opensourcesim sshd[24026]: reverse mapping checking getaddrinfo for corporat190-024129008.sta.etb.net.co [190.24.129.8] failed - POSSIBLE BREAK-IN ATTEMPT!
#Oct  3 15:38:09 ks213611 sshd[9820]: reverse mapping checking getaddrinfo for 190-176-128-171.speedy.com.ar [190.176.128.171] failed - POSSIBLE BREAK-IN ATTEMPT!
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*reverse mapping checking getaddrinfo for\s(?P<a_map>\S+)\s\[(?P<src>\S+)\]"
plugin_sid=15
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
userdata1={$a_map}

[17 - Address not mapped]
#Jan 14 08:07:46 opensourcesim sshd[21128]: Address 64.151.123.165 maps to 64.151.123.165.servepath.com, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT!
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Address\s(?P<src>\S+)\smaps to\s(?P<a_map>\S+),"
plugin_sid=16
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
userdata1={$a_map}

[18 - Server listening - Daemon started]
#Jan 12 01:15:58 opensourcesim sshd[2479]: Server listening on 0.0.0.0 port 22.
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Server listening on\s(?P<src>\S+)\sport\s(\?P<d_port>\d{1,5})"
plugin_sid=17
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
dst_port={$d_port}

[19 - Server terminated - Daemon stopped]
#Jan 15 11:58:03 opensourcesim sshd[2479]: Received signal 15; terminating.
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Received signal\s(?P<signal>\d+)"
plugin_sid=18
date={normalize_date($date)}
dst_ip={resolv($dst)}
userdata1={$signal}

[20 - Denied connection]
#Jan 15 11:58:03 opensourcesim sshd[21212]: Denied connection from by 192.168.10.1 tcp wrappers
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Denied connection from by\s(?P<src>\S+)"
plugin_sid=20
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}

[21 - Could not get shadow information]
#Jan 13 05:48:05 spasdfasc01 sshd[25794]: error: Could not get shadow information for NOUSER
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Could not get shadow information for\s+(?P<user>\S*)"
plugin_sid=21
date={normalize_date($date)}
username={$user}
dst_ip={resolv($dst)}

[22 - Recieved connection]
#Jan 13 10:33:59 hpux01 sshd[26224]: SSH: Server;Ltype: Version;Remote: 12.15.1.1-55446;Protocol: 1.5;Client: OpenSSH_3.7.1p2-host01
#Jan 13 10:37:49 hpux01 sshd[28294]: SSH: Server;LType: Throughput;Remote: 12.15.1.1-61846;IN: 7712;OUT: 1648;Duration: 9.9;tPut_in: 780.6;tPut_out: 166.8
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Server.*(Ltype|LType):\s+(?P<sid>[^;]+).*Remote:\s+(?P<src>\S+)-(?P<port>\d{1,5})"
plugin_sid={translate($sid)}
date={normalize_date($date)}
src_ip={resolv($src)}
src_port={$port}
dst_ip={resolv($dst)}

[23 - Login sucessful (Accepted password)]
# Jan 13 09:49:16 hpux01 sshd[3231]: Accepted keyboard-interactive/pam for username from 12.15.1.1 port 54911
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Accepted keyboard-interactive.* for\s+(?P<user>\S+)\s.*from\s+(?P<src>\S+)\s.*port\s+(?P<port>\d{1,5})"
plugin_sid=7
date={normalize_date($date)}
src_ip={resolv($src)}
dst_ip={resolv($dst)}
src_port={$sport}
username={$user}

# At pam_unix.cfg
#[25 - ssh pam session status]
##Oct 13 13:05:01 www1 sshd[4901]: pam_unix(sshd:session): session opened for user obovt by (uid=0)
##Oct 13 13:09:26 www1 sshd[4901]: pam_unix(sshd:session): session closed for user obovt
#event_type=event
#regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+).*ssh.*session\s+(?P<status>\S+)\sfor user\s+(?P<user>\S+)"
#plugin_sid={translate($status)}
#date={normalize_date($date)}
#dst_ip={resolv($dst)}
#username={$user}

[27 - Conection closed ]
# Dec 18 01:33:53 serv2 sshd[32420]: Connection closed by 10.50.50.1
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\s.*ssh.*Connection closed by\s+(?P<src>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"
plugin_sid=27
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip={resolv($src)}


[28 - ssh - POSSIBLE BREAK-IN ATTEMPT]
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+).*sshd?\[\d+\]: reverse mapping checking getaddrinfo for (?P<hostname>\S+)\s(?P<status>\S+)\s\-\sPOSSIBLE BREAK-IN ATTEMPT!"
plugin_sid=28
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip={resolv($hostname)}
userdata1=$status


[29 - SSH - PROTOCOL VERSIONS DIFFER ]
# May 25 16:23:07 alienvault sshd[5633]: Protocol major versions differ for 192.168.205.90: SSH-2.0-OpenSSH_5.5p1 Debian-6+squeeze2 vs. SSH-1.5-NmapNSE_1.0
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\ssshd\[\d+\]: Protocol major versions differ for (?P<src>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}):(?P<v1>.*)vs.(?P<v2>.*)"
plugin_sid=100
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip={resolv($src)}
userdata1={$v1}
userdata2={$v2}


[ZZW - SSHD input_userauth_request]
#Dec 4 19:03:40 serv2 sshd[10388]: input_userauth_request: invalid user cyrus
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\ssshd\[\d+\]: input_userauth_request: invalid user (?P<user>.*)"
plugin_sid=96
date={normalize_date($date)}
dst_ip={resolv($dst)}
username={$user}

[ZZX- SSHD error retrieving info ]
#Dec 4 16:41:39 serv2 sshd[4866]: pam_succeed_if(sshd:auth): error retrieving information about user philip
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+)\ssshd\[\d+\]:\s*pam_succeed_if\(sshd:auth\):\s*error retrieving information about user\s(?P<user>.*)"
plugin_sid=97
date={normalize_date($date)}
dst_ip={resolv($dst)}
username={$user}


[ZZY - ssh - PAM generic rule]
# Nov 15 11:55:35 11.1.4.9 sshd[1769702]: **********
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+).*sshd?\[\d+\]:.*pam_unix.*"
plugin_sid=98
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip="0.0.0.0"

[ZZZ - ssh - Generic rule]
# Nov 15 11:55:35 11.1.4.9 sshd[1769702]: **********
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<dst>\S+).*sshd?\[\d+\]:"
plugin_sid=99
date={normalize_date($date)}
dst_ip={resolv($dst)}
src_ip="0.0.0.0"

[30 - ssh - Failed password]
# Feb  8 10:09:06 golgotha sshd[24472]: Failed password for dgil from 192.168.6.69 port 33992 ssh2
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Failed password for (?P<user>\S+)\s+from\s+.*?(?P<src>\IPV4).*port\s+(?P<sport>\d{1,5})"
plugin_sid=1
sensor={resolv($sensor)}
date={normalize_date($1)}
src_ip={$src}
dst_ip={resolv($sensor)}
src_port={$sport}
username={$user}

[31 - ssh AIX - Failed password]
# Aug 16 11:36:29 Message forwarded from pu5bta: sshd[2486340]: Failed password for pru2000 from 172.17.160.63 port 2350 ssh2
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+Failed\s+password\s+for\s+(.*?)\s+from\s+(.*?)\s+port\s+(.*?)\s+\w+"
plugin_sid=1
sensor={resolv($2)}
date={normalize_date($1)}
src_ip={$3}
dst_ip={resolv($2)}
src_port={$4}
username={$3}

[32 - ssh - Failed password for invalid user]
#Mar 29 11:17:52 opensourcesim sshd[11685]: Failed none for invalid user test tester from 189.80.131.234 port 42371 ssh2
#Mlar 17 17:28:03 opensourcesim sshd[16689]: Failed password for invalid user user from 1**.121.101.94 port 39792 ssh2
#Jan 13 05:48:12 spcp1appfac01 sshd[25796]: Failed password for invalid user jboss from 203.73.29.232 port 52736 ssh2
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Failed.*for invalid user (?P<user>.+)\s+from\s+.*?(?P<src>\IPV4).*port\s+(?P<sport>\d{1,5})"
plugin_sid=1
sensor={resolv($sensor)}
date={normalize_date($1)}
src_ip={$src}
dst_ip={resolv($sensor)}
src_port={$sport}
username={$user}

[33 - ssh AIX - Failed password for invalid user]
#Aug 13 17:11:51 Message forwarded from pu5bta: sshd[2023662]: Failed none for invalid user bsmcrm from 172.17.1.2 port 49427 ssh2
#Aug 13 17:11:51 Message forwarded from pu5bta: sshd[2023662]: Failed password for invalid user bsmcrm from 172.17.1.2 port 49427 ssh2
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd.*?\:\s+Failed\s+\w+\s+for\s+invalid\s+user\s+(.*?)\s+from\s+(.*?)\s+port\s+(\d+)\s+\w+"
plugin_sid=1
sensor={resolv($2)}
date={normalize_date($1)}
src_ip={$4}
dst_ip={resolv($2)}
src_port={$5}
username={$3}


[34 - ssh - Failed publickey]
# Sep 15 11:29:17 devel-host sshd[18163]: Failed publickey for invalid user fred from 192.168.2.2 port 62788 ssh2 
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Failed (publickey) for invalid (?P<user>\S+)\s+.*?(?P<src>\IPV4).*port\s+(?P<sport>\d{1,5})"
plugin_sid=2
sensor={resolv($sensor)}
date={normalize_date($1)}
src_ip={$src}
dst_ip={resolv($sensor)}
src_port={$sport}
username={$user}

[35 - ssh AIX - Failed publickey]
#Aug 12 18:14:07 Message forwarded from pu5bta: sshd[18163]: Failed publickey for invalid user fred from 192.168.2.2 port 62788 ssh2 
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+Failed\s+publickey\s+for\s+invalid\s+user\s+(.*?)\s+from\s+(.*?)\s+port\s+(.*?)\s+\w+"
plugin_sid=2
sensor={resolv($2)}
date={normalize_date($1)}
src_ip={$4}
dst_ip={resolv($2)}
src_port={$5}
username={$3}

[36 - ssh - Invalid user]
# Sep  6 11:04:02 ossim-devel sshd[6983]: Invalid user test123 from 10.222.14.27
# 
event_type=event
regexp="(?P<date>\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Invalid user (?P<user>\S+) from (?P<src>\IPV4)"
plugin_sid=3
sensor={resolv($sensor)}
date={normalize_date($1)}
src_ip={$src}
dst_ip={resolv($sensor)}
username={$user}

#[37 - ssh AIX - Invalid user]
# Aug 12 17:11:44 Message forwarded from pu5bta: sshd[1974296]: Invalid user bsmcrm from 172.17.1.2
# 
#event_type=event
#regexp="((\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+Invalid\s+user\s+(.+?)\s+from\s+(.*?)\n"
#plugin_sid=3
#sensor={resolv($2)}
#date={normalize_date($1)}
#src_ip={$4}
#dst_ip={resolv($2)}
#username={$3}

[38 - ssh - Illegal user]
# Jan  7 16:36:07 hostname sshd[25119]: Illegal user rolo from 192.168.2.1 
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Illegal user (?P<user>\S+) from (?P<src>\IPV4)"
plugin_sid=4
sensor={resolv($sensor)}
date={normalize_date($1)}
src_ip={$src}
dst_ip={resolv($sensor)}
username={$user}

[39 - ssh AIX - Illegal user]
# Aug 18 15:08:29 Message forwarded from pu5bta: sshd[25119]: Illegal user rolo from 192.168.2.1  
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+Illegal\s+user\s+(.*?)\s+from\s+(.*?)\n"
plugin_sid=4
sensor={resolv($2)}
date={normalize_date($1)}
src_ip={$4}
dst_ip={resolv($2)}
username={$3}

[40 - ssh - Root login refused]
# Jan  15 01:32:01 ossim-devel sshd[1222]: ROOT LOGIN REFUSED FROM 10.222.3.41
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Root login refused from (?P<src>\IPV4)"
plugin_sid=5
sensor={resolv($sensor)}
date={normalize_date($1)}
src_ip={$src}
dst_ip={resolv($sensor)}
username=root

[41 - ssh AIX - Root login refused]
# Aug 18 15:08:29 Message forwarded from pu5bta: sshd[1222]: ROOT LOGIN REFUSED FROM 172.17.230.4
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+ROOT\s+LOGIN\s+REFUSED\s+FROM\s+(.*?)\n"
plugin_sid=5
sensor={resolv($2)}
date={normalize_date($1)}
src_ip={$3}
dst_ip={resolv($2)}
username=root


[42 - ssh - User not allowed because listed in DenyUsers]
# Sep  6 11:04:02 ossim-devel sshd[6983]: User piedrahita not allowed because listed
# in DenyUsers
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*User (?P<User>\S+) not allowed because listed in Denyusers"
plugin_sid=6
date={normalize_date($1)}
sensor={resolv($sensor)}
username={$user}
dst_ip={resolv($sensor)}

[43 - ssh AIX - User not allowed because listed in DenyUsers]
# It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+User\s+(.*?)\s+not\s+allowed\s+because\s+listed\s+in\s+Denyusers"
plugin_sid=6
date={normalize_date($1)}
sensor={resolv($2)}
username={$3}
dst_ip={resolv($2)}


[44 - ssh - User not allowed because account is locked]
# Sep  6 11:04:02 ossim-devel sshd[6983]: User piedrahita not allowed because account is locked
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*User (?P<User>\S+) not allowed because account is locked"
plugin_sid=13
date={normalize_date($1)}
sensor={resolv($sensor)}
username={$user}
dst_ip={resolv($sensor)}

[45 - ssh AIX - User not allowed because account is locked]
# It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+User\s+(.*?)\s+not\s+allowed\s+because\s+account\s+is\s+locked"
plugin_sid=13
date={normalize_date($1)}
sensor={resolv($2)}
username={$3}
dst_ip={resolv($2)}

[46 - ssh - Authentication refused]
#Nov 15 14:21:49 128.1.4.9 sshd[1343672]: Authentication refused: bad ownership
#or modes for file /home/user/.sshauthorized_keys
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Authentication refused: bad ownership or modes for file (?P<file>\S+)"
plugin_sid=12
date={normalize_date($1)}
sensor={resolv($sensor)}
dst_ip={resolv($sensor)}
filename={$file}

[47 - ssh AIX - Authentication refused]
## It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+Authentication\s+refused\:\s+bad\s+ownership\s+or\s+modes\s+for\s+file\s+(.*?)\n"
plugin_sid=12
date={normalize_date($1)}
sensor={resolv($2)}
dst_ip={resolv($2)}
filename={$3}


##
## Succesfull login attempts
##

[48 - ssh - Login sucessful (Accepted password)]
# Sep  6 10:51:04 ossim-devel sshd[6379]: Accepted password for dgil from
# 10.222.14.12 port 33232 ssh2
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Accepted password for (?P<user>\S+)\s+.*?(?P<src>\IPV4).*port\s+(?P<sport>\d{1,5})"
plugin_sid=7
sensor={resolv($sensor)}
date={normalize_date($1)}
src_ip={$src}
dst_ip={resolv($sensor)}
src_port={$sport}
username={$user}

[49 - ssh AIX - Login sucessful (Accepted password)]
# Aug 11 15:32:10 Message forwarded from pu5bta: sshd[1409150]: Accepted password for sisdesa from 172.17.230.43 port 3234 ssh2
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd.*?\:\s+Accepted\s+password\s+for\s+(\w+)\s+from\s+(.*?)\s+port\s+(.*?)\s+\w+"
plugin_sid=8
sensor={resolv($2)}
date={normalize_date($1)}
src_ip={$4}
dst_ip={resolv($2)}
src_port={$5}
username={$3}


[50 - ssh - Login sucessful (Accepted publickey)]
# Sep  5 19:07:51 lolita sshd[14206]: Accepted publickey for alopezp from
# 195.235.*.* port 45602 ssh2
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Accepted publickey for (?P<user>\S+)\s+.*?(?P<src>\IPV4).*port\s+(?P<sport>\d{1,5})"
plugin_sid=8
sensor={resolv($sensor)}
date={normalize_date($1)}
src_ip={$src}
dst_ip={resolv($sensor)}
src_port={$sport}
username={$user}

[51 - ssh AIX - Login sucessful (Accepted publickey)]
# Aug 30 16:02:50 Message forwarded from pu17bta: sshd[3608794]: Accepted publickey for root from 172.17.1.8 port 59090 ssh2
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd.*?\:\s+Accepted\s+publickey\s+for\s+(\w+)\s+from\s+(.*?)\s+port\s+(.*?)\s+\w+"
plugin_sid=8
sensor={resolv($2)}
date={normalize_date($1)}
src_ip={$4}
dst_ip={resolv($2)}
src_port={$5}
username={$3}


##
## Other
##
[52 - ssh - Bad protocol version identification]
# Sep  5 05:01:07 lolita sshd[18931]: Bad protocol version identification
# '\\026\\003' from 208.32.22.22
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Bad protocol version identification .* from (?P<src>\IPV4)"
plugin_sid=9
date={normalize_date($1)}
sensor={resolv($sensor)}
src_ip={$src}
dst_ip={resolv($sensor)}

[53 - ssh - Bad protocol version identification]
## It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+Bad\s+protocol\s+version\s+identification\s+.*?from\s+(.*?)\n"
plugin_sid=9
date={normalize_date($1)}
sensor={resolv($2)}
src_ip={$3}
dst_ip={resolv($2)}


[54 - ssh - Did not receive identification string]
# Sep  5 05:01:07 lolita sshd[3083]: Did not receive identification string from 192.157.2.2
# Jan 12 02:52:11 ssdfasdaasdfc01 sshd[31147]: Did not receive identification string from 1.2.29.19
event_type=event
#regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Did not receive identification string from (?P<src>\IPV4)"
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Did not receive identification string from (?P<src>\IPV4)"
plugin_sid=10
date={normalize_date($1)}
sensor={resolv($sensor)}
src_ip={$src}
dst_ip={resolv($sensor)}

[55 - ssh AIX - Did not receive identification string]
#Aug 12 18:14:07 Message forwarded from pu5bta: sshd[2424938]: Did not receive identification string from 172.17.1.2
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+Did\s+not\s+receive\s+identification\s+string\s+from\s+(.*?)\n"
plugin_sid=10
date={normalize_date($1)}
sensor={resolv($2)}
src_ip={$3}
dst_ip={resolv($2)}


[56 - ssh - Refused connect]
#Feb  5 05:00:08 morion sshd[20926]: refused connect from **.172.200.198 (**.172.200.198)
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*refused connect from (?P<src>\IPV4)"
plugin_sid=15
date={normalize_date($1)}
sensor={resolv($sensor)}
src_ip={$src}
dst_ip={resolv($sensor)}

[57 - ssh AIX - Refused connect]
### It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+refused\s+connect\s+from\s+(.*?)\s+\(.*?\)"
plugin_sid=15
date={normalize_date($1)}
sensor={resolv($2)}
src_ip={$3}
dst_ip={resolv($2)}

[58 - ssh - Received disconnect]
# Nov 15 11:55:35 130.1.4.9 sshd[1769702]: Received disconnect from
# 172.21.11.134: 11: Disconnect requested by Windows SSH Client.
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Received disconnect from (?P<src>\IPV4)"
plugin_sid=11
date={normalize_date($1)}
sensor={resolv($sensor)}
src_ip={$src}
dst_ip={resolv($sensor)}

[59 - ssh AIX - Received disconnect]
# It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+Received\s+disconnect\s+from\s+(.*?)\:\s+(.*?)\:\s+(.*?)\."
plugin_sid=15
date={normalize_date($1)}
sensor={resolv($2)}
src_ip={$3}
dst_ip={resolv($2)}
userdata1={$5}

[60 - ssh - PAM 2 more authentication failures]
#Aug 14 19:30:47 ossim sshd[16178]: PAM 2 more authentication failures;
#logname= uid=0 euid=0 tty=ssh ruser= rhost=192.168.169.129  user=test
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*PAM 2 more authentication failures; logname=.* uid=.* euid=.* tty=.* ruser=.* rhost=(?P<src>\IPV4)\s*user=(?P<User>\S+)"
plugin_sid=14
date={normalize_date($1)}
sensor={resolv($sensor)}
dst_ip={resolv($sensor)}
src_ip={$src}
username={$user}

[61 - ssh AIX - PAM 2 more authentication failures]
# It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+PAM\s+2\s+more\s+authentication\s+failures\;\s+\w+\=.*?\s+\w+\=\d+\s+\w+\=\d+\s+\w+\=.*?\s+\w+\=.*?\s+\w+\=(.*?)\s+\w+\=(.*?)\n"
plugin_sid=14
date={normalize_date($1)}
sensor={resolv($2)}
dst_ip={resolv($2)}
src_ip={$3}
username={$4}

[62 - ssh - Reverse mapping failed]
#Jan 14 23:17:47 opensourcesim sshd[24026]: reverse mapping checking getaddrinfo for corporat190-024129008.sta.etb.net.co [190.24.129.8] failed - POSSIBLE BREAK-IN ATTEMPT!
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*reverse mapping checking getaddrinfo for\s(?P<a_map>\S+)\s\[(?P<s_ip>\IPV4)"
plugin_sid=15
date={normalize_date($1)}
sensor={resolv($sensor)}
src_ip={$s_ip}
dst_ip={resolv($sensor)}
userdata1={$a_map}

[63 - ssh AIX - Reverse mapping failed]
#Aug 12 17:57:20 Message forwarded from pu5bta: sshd[2199718]: reverse mapping checking getaddrinfo for dellsiscentral2.porvenir.com [172.17.140.2] failed - POSSIBLE BREAK-IN ATTEMPT!
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+reverse\s+mapping\s+checking\s+getaddrinfo\s+for\s+(.*?)\s+\[(.*?)\]\s+failed\s+\-\s+.*?\!"
plugin_sid=15
date={normalize_date($1)}
sensor={resolv($2)}
src_ip={$4}
dst_ip={resolv($2)}
userdata1={$3}


[64 - ssh - Address not mapped]
#Jan 14 08:07:46 opensourcesim sshd[21128]: Address 64.151.123.165 maps to 64.151.123.165.servepath.com, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT!
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Address\s(?P<src_ip>\IPV4)\smaps to\s(?P<a_map>\S+)"
plugin_sid=16
date={normalize_date($1)}
sensor={resolv($sensor)}
src_ip={$src_ip}
dst_ip={resolv($sensor)}
userdata1={$a_map}

[65 - ssh AIX - Address not mapped]
#Aug 30 14:05:18 Message forwarded from pu106bta: sshd[13828302]: Address 172.17.1.103 maps to soppro03.porvenir.com, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT!
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+Address\s+(.*?)\s+maps\s+to\s+(.*?)\,.*?\-.*?\!"
plugin_sid=16
date={normalize_date($1)}
sensor={resolv($2)}
src_ip={$3}
dst_ip={resolv($2)}
userdata1={$4}


[66 - ssh - Server listening - Daemon started]
#Jan 12 01:15:58 opensourcesim sshd[2479]: Server listening on 0.0.0.0 port 22.
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Server listening on\s(?P<src_ip>\IPV4)\sport\s(\?P<d_port>PORT)"
plugin_sid=17
date={normalize_date($1)}
sensor={resolv($sensor)}
src_ip={$src_ip}
dst_ip={resolv($sensor)}
dst_port={$d_port}
userdata1={$a_map}

[67 - ssh AIX - Server listening - Daemon started]
# It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+Server\s+listening\s+on\s+(.*?)\s+port\s+(\d+)\."
plugin_sid=17
date={normalize_date($1)}
sensor={resolv($2)}
src_ip={$3}
dst_ip={resolv($2)}
dst_port={$4}


[68 - ssh - Server terminated - Daemon stopped]
#Jan 15 11:58:03 opensourcesim sshd[2479]: Received signal 15; terminating.
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Received signal\s(?P<signal>\d+)"
plugin_sid=18
date={normalize_date($1)}
sensor={resolv($sensor)}
src_ip={resolv($sensor)}
userdata1={$signal}

[69 - ssh AIX - Server terminated - Daemon stopped]
# It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+Received\s+signal\s+(\d+)\;\s+\w+\."
plugin_sid=18
date={normalize_date($1)}
sensor={resolv($2)}
src_ip={resolv($2)}
userdata1={$3}
#signal


[70 - ssh - Refused connect]
#Jan 15 11:58:03 opensourcesim sshd[21212]: refused connect from 192.168.10.1
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*refused connect from\s(?P<s_ip>\IPV4)"
plugin_sid=19
date={normalize_date($1)}
sensor={resolv($sensor)}
src_ip={$s_ip}
dst_ip={resolv($sensor)}

[71 - ssh AIX - Refused connect]
# It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+refused\s+connect\s+from\s+(.*?)\n"
plugin_sid=19
date={normalize_date($1)}
sensor={resolv($2)}
src_ip={$3}
dst_ip={resolv($2)}

[72 - ssh - Denied connection]
#Jan 15 11:58:03 opensourcesim sshd[21212]: Denied connection from by 192.168.10.1 tcp wrappers
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Denied connection from by\s(?P<s_ip>\IPV4)"
plugin_sid=20
date={normalize_date($1)}
sensor={resolv($sensor)}
src_ip={$s_ip}
dst_ip={resolv($sensor)}

[73 - ssh AIX - Denied connection]
# It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+\Denied\s+connection\s+from\s+by\s+(.*?)\s+(.*?)\s+(.*?)\n"
plugin_sid=20
date={normalize_date($1)}
sensor={resolv($2)}
src_ip={$3}
dst_ip={resolv($2)}
userdata1={$4}
userdata2={$5}

[74 - ssh - Could not get shadow information]
#Jan 13 05:48:05 spasdfasc01 sshd[25794]: error: Could not get shadow information for NOUSER
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Could not get shadow information for\s+(?P<user>\S*)"
plugin_sid=21
date={normalize_date($1)}
sensor={resolv($sensor)}
username={$user}
dst_ip={resolv($sensor)}

[75 - ssh AIX - Could not get shadow information]
# It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+\w+\:\s+Could\s+not\s+get\s+shadow\s+information\s+for\s+(.*?)\n"
plugin_sid=21
date={normalize_date($1)}
sensor={resolv($2)}
username={$3}
dst_ip={resolv($2)}

[76 - ssh hpux - Recieved connection]
#Jan 13 10:33:59 hpux01 sshd[26224]: SSH: Server;Ltype: Version;Remote: 12.15.1.1-55446;Protocol: 1.5;Client: OpenSSH_3.7.1p2-host01
#Jan 13 10:37:49 hpux01 sshd[28294]: SSH: Server;LType: Throughput;Remote: 12.15.1.1-61846;IN: 7712;OUT: 1648;Duration: 9.9;tPut_in: 780.6;tPut_out: 166.8
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Server.*(Ltype|LType):\s+(?P<sid>[^;]+).*Remote:\s+(?P<s_ip>\IPV4)-(?P<port>\d{1,5})"
plugin_sid={translate($sid)}
date={normalize_date($1)}
sensor={resolv($sensor)}
src_ip={$s_ip}
src_port={$port}
dst_ip={resolv($sensor)}


[77 - ssh - Login sucessful (Accepted password)]
# Jan 13 09:49:16 hpux01 sshd[3231]: Accepted keyboard-interactive/pam for username from 12.15.1.1 port 54911
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh.*Accepted keyboard-interactive.* for\s+(?P<user>\S+)\s+from\s+(?P<s_ip>\IPV4)\s+port\s+(?P<port>\d{1,5})"
plugin_sid=7
sensor={resolv($sensor)}
date={normalize_date($1)}
src_ip={$s_ip}
dst_ip={resolv($sensor)}
src_port={$sport}
username={$user}

###Other AIX rules####

[78 - ssh AIX - Couldn't wait for child]
# Aug 18 15:08:24 Message forwarded from pu5bta: sshd[2486508]: fatal: Couldn't wait for child: There are no child processes.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+fatal\:\s+Couldn't\s+wait\s+for\s+child\:\s+.*?\."
plugin_sid=101
date={normalize_date($1)}
sensor={resolv($2)}
dst_ip={resolv($2)}

[79 - ssh AIX - subsystem request for sftp]
# Aug 18 15:08:29 Message forwarded from pu5bta: sshd[2486512]: subsystem request for sftp
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*?]\:\s+subsystem\s+request\s+for\s+sftp"
plugin_sid=102
date={normalize_date($1)}
sensor={resolv($2)}
dst_ip={resolv($2)}

[ZZZY - ssh - Generic rule]
# Nov 15 11:55:35 11.1.4.9 sshd[1769702]: **********
event_type=event
regexp="(\w{3}\s+\d{1,2}\s\d\d:\d\d:\d\d)\s+(?P<sensor>\S*).*ssh\[.*"
plugin_sid=99
date={normalize_date($1)}
sensor={resolv($sensor)}
dst_ip={resolv($sensor)}

[ZZZZ - ssh AIX - Generic rule]
# # It hasn't been used any sample for this rule, It was made based on the other AIX rules because they are quite similar.
event_type=event
regexp="(\w+\s+\S+\s+\d+\:\d+\:\d+)\s+Message forwarded from\s+(.*?)\:\s+sshd\[.*"
plugin_sid=99
date={normalize_date($1)}
sensor={resolv($2)}
dst_ip={resolv($2)}
